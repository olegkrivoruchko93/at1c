#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ДБ_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	Если ДБ_DaData.ИспользоватьПодсказкуDadata() Тогда
		ДБ_ДобавитьКнопкуЗаполнитьРеквизитыПоДаннымDaData();
		ДБ_ИспользоватьПодсказкуDadata = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДБ_КонтактнаяИнформацияПолеEmailКонтрагентыАвтоПодборПосле(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ДБ_ИспользоватьПодсказкуDadata Тогда
		
		Подсказки = ДБ_DaData.ПодсказкаПоEmail(Текст);
		
		Если Подсказки.suggestions.Количество() > 0 Тогда
			
			СтандартнаяОбработка = Ложь;
			
			ДанныеВыбора = Новый СписокЗначений;
			
			Для Каждого email Из Подсказки.suggestions Цикл 
				ДанныеВыбора.Добавить(email.unrestricted_value, email.unrestricted_value);	
			КонецЦикла;
			
		КонецЕсли
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДБ_ФИООсновноеКонтактноеЛицоАвтоПодборПосле(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ДБ_ИспользоватьПодсказкуDadata Тогда
		
		Подсказки = ДБ_DaData.ПодсказкаПоФИО(Текст);
		
		Если Подсказки.suggestions.Количество() > 0 Тогда
			
			СтандартнаяОбработка = Ложь;
			
			ДанныеВыбора = Новый СписокЗначений;
			
			Для Каждого ФИО Из Подсказки.suggestions Цикл 
				ДанныеВыбора.Добавить(ФИО.unrestricted_value, ФИО.unrestricted_value);	
			КонецЦикла;
			
		КонецЕсли
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДБ_ЗаполнитьРеквизитыПоДаннымDaData()
	
	ПолеПоискаИНН = СокрЛП(Объект.ИНН);
	
	Если ПустаяСтрока(ПолеПоискаИНН) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСТр("ru='Введите ИНН'"),, "ИНН");
		Возврат;
	КонецЕсли;
	
	Если ЭтоИНН(ПолеПоискаИНН) Тогда
		
		suggestion = ДБ_DaData.СведенияОЮридическомЛицеПоИНН(ПолеПоискаИНН);
		
		Если suggestion.suggestions = Неопределено Тогда           
			//ToDo: посмотреть, как сделать в формате НСТр("ru='Введите ИНН'")
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(suggestion.ОписаниеОшибки);
		ИначеЕсли suggestion.suggestions.Количество() = 1 Тогда
			ДБ_ЗаполнитьРеквизитыКонтрагентаПоСтруктуре(suggestion.suggestions[0]);
		Иначе
			СписокВыбора = ДБ_СформироватьСписокВыбора(suggestion.suggestions);
			СписокВыбора.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ДБ_ПослеВыбораКонтрагента", ЭтотОбъект), "По данному ИНН найдено несколько контрагентов, выберите нужного:",);
		КонецЕсли;
		
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСТр("ru='Введите ИНН'"),, "ИНН");
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДБ_ДобавитьКнопкуЗаполнитьРеквизитыПоДаннымDaData()
	
	НоваяКоманда = ЭтаФорма.Команды.Добавить("ДБ_ЗаполнитьРеквизитыПоДаннымDaData");
	НоваяКоманда.Действие = "ДБ_ЗаполнитьРеквизитыПоДаннымDaData";
	НоваяКоманда.Заголовок = "Заполнить по ИНН (ДБ)";
	
	НоваяКнопка = ЭтаФорма.Элементы.Добавить("ДБ_ЗаполнитьРеквизитыПоДаннымDaData", Тип("КнопкаФормы"), ЭтаФорма.Элементы.ГруппаИНН);
	НоваяКнопка.Отображение = ОтображениеКнопки.КартинкаИТекст;
	НоваяКнопка.ИмяКоманды = "ДБ_ЗаполнитьРеквизитыПоДаннымDaData";
	
КонецПроцедуры

&НаКлиенте
Процедура ДБ_ПослеВыбораКонтрагента(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ДБ_ЗаполнитьРеквизитыКонтрагентаПоСтруктуре(ВыбранныйЭлемент.Значение);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Заполнить реквизиты контрагента
//
// Параметры:
//  suggestion	 - Структура - Структура хранящая сведения о контрагенте
//  Описание структуры можно получить на сайте https://dadata.ru/api/find-party/
//
&НаКлиенте
Процедура ДБ_ЗаполнитьРеквизитыКонтрагентаПоСтруктуре(ДанныеЗаполнения)
	
	НовыйВид = ?(ДанныеЗаполнения.data.type = "INDIVIDUAL", "ИндивидуальныйПредприниматель", "ЮридическоеЛицо");
	
	Если НовыйВид <> Вид Тогда
		Вид = НовыйВид;
		
		ВидПриИзмененииНаСервере();
		
		ЗапуститьПроверкуКонтрагента();
		
		// ИнтернетПоддержкаПользователей.СПАРКРиски
		ИндексыСПАРКРиски = Неопределено; // Сбросить полученные значения
		ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОтображениеИндексыСПАРК", 0.1, Истина);
		// Конец ИнтернетПоддержкаПользователей.СПАРКРиски
		
	КонецЕсли;
	
	Если ДанныеЗаполнения.data.type = "INDIVIDUAL" Тогда // Контрагент - ИП
		
		Объект.Наименование = ДанныеЗаполнения.data.name.short_with_opf;
		Объект.НаименованиеПолное = ДанныеЗаполнения.data.name.short_with_opf;
		Объект.ИНН = ДанныеЗаполнения.data.inn;
		Объект.РегистрационныйНомер = ДанныеЗаполнения.data.ogrn;
		Объект.СвидетельствоДатаВыдачи = Дата(1970,1,1,1,0,0) + ДанныеЗаполнения.data.ogrn_date / 1000;
		
		ИННПриИзмененииНаСервере();
		
	Иначе // Контрагент - юридическое лицо
		
		// От DaData для некоторых компаний приходит пустое поле "ДанныеЗаполнения.data.name.short_with_opf"
		// Заполнение полного наименования
		Объект.НаименованиеПолное = ?(ЗначениеЗаполнено(ДанныеЗаполнения.data.name.short_with_opf),
		ДанныеЗаполнения.data.name.short_with_opf,
		ДанныеЗаполнения.data.name.full_with_opf);
		Объект.Наименование = ДанныеЗаполнения.data.name.full;
		// Конец Заполнение полного наименования
		
		Объект.ИНН = ДанныеЗаполнения.data.inn;
		ИННПриИзмененииНаСервере();
		Объект.КПП = ДанныеЗаполнения.data.kpp;
		КПППриИзмененииНаСервере();
		Объект.РегистрационныйНомер = ДанныеЗаполнения.data.ogrn;
		
	КонецЕсли; 
	
	ДБ_ЗаполнитьАдресНаСервере(ДанныеЗаполнения);
	
	Если ДанныеЗаполнения.data.state.status <> "действующий" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон("Контрагент имеет статус %1", ДанныеЗаполнения.data.state.status));
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьРеквизитыПоСтруктуре()

&НаСервере
Процедура ДБ_ЗаполнитьАдресНаСервере(ДанныеЗаполнения)
	
	ВидКИ = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
	ТипКИ = Перечисления.ТипыКонтактнойИнформации.Адрес;
	
	АдресСтруктура = УправлениеКонтактнойИнформацией.ОписаниеНовойКонтактнойИнформации(Перечисления.ТипыКонтактнойИнформации.Адрес); // Новый адрес
	АдресСтруктура.AddressType = РаботаСАдресамиКлиентСервер.МуниципальныйАдрес();
	АдресСтруктура.type = "Адрес";
	АдресСтруктура.ZIPcode = ДанныеЗаполнения.data.address.data.postal_code;
	АдресСтруктура.country = ВРег(ДанныеЗаполнения.data.address.data.country);
	АдресСтруктура.countryCode = ДанныеЗаполнения.data.address.data.country_iso_code;
	АдресСтруктура.areaType = ДанныеЗаполнения.data.address.data.region_type;
	АдресСтруктура.area = ДанныеЗаполнения.data.address.data.region;
	АдресСтруктура.cityType = ДанныеЗаполнения.data.address.data.city_type;
	АдресСтруктура.city = ДанныеЗаполнения.data.address.data.city;
	АдресСтруктура.streetType = ДанныеЗаполнения.data.address.data.street_type;
	АдресСтруктура.street = ДанныеЗаполнения.data.address.data.street;
	АдресСтруктура.houseType = ?(ДанныеЗаполнения.data.address.data.house_type = "д", "Дом", ДанныеЗаполнения.data.address.data.house_type);
	АдресСтруктура.houseNumber = ДанныеЗаполнения.data.address.data.house;
	Если ДанныеЗаполнения.data.address.data.room <> Неопределено Тогда
		АдресСтруктура.apartments.Добавить(Новый Структура("type,number","Офис",ДанныеЗаполнения.data.address.data.room));
	КонецЕсли;
	АдресСтруктура.Value = ДанныеЗаполнения.data.address.unrestricted_value; 
	
	Значение = УправлениеКонтактнойИнформациейСлужебный.СтруктураВСтрокуJSON(АдресСтруктура);
	ЗначенияПолей = УправлениеКонтактнойИнформациейЛокализация.КонтактнаяИнформацияИзJSONВXML(АдресСтруктура, ТипКИ);
	
	ЭтаФорма.КонтактнаяИнформацияПолеПочтовыйАдресКонтрагента = ДанныеЗаполнения.data.address.unrestricted_value;
	ЭтаФорма.КонтактнаяИнформацияПолеФактАдресКонтрагента = ДанныеЗаполнения.data.address.unrestricted_value;
	ЭтаФорма.КонтактнаяИнформацияПолеЮрАдресКонтрагента  = ДанныеЗаполнения.data.address.unrestricted_value;
	ЭтаФорма.ПочтовыйАдресКонтрагентаСовпадает = ДанныеЗаполнения.data.address.unrestricted_value;
	ЭтаФорма.ФактАдресКонтрагентаСовпадает = ДанныеЗаполнения.data.address.unrestricted_value;
	ЭтаФорма.Модифицированность = Истина;
	
	КонтактнаяИнформацияПолеЮрАдресКонтрагента = ДанныеЗаполнения.data.address.unrestricted_value;
	ДанныеФормыЮрАдрес = КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("Вид", ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента")))[0];
	ДанныеФормыЮрАдрес.Значение = Значение;
	ДанныеФормыЮрАдрес.Представление = ДанныеЗаполнения.data.address.unrestricted_value;
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры // ЗаполнитьАдресНаСервере()

Функция ДБ_СформироватьСписокВыбора(suggestions)
	
	СписокВыбора = Новый СписокЗначений;
	
	Для Каждого suggestion Из suggestions Цикл
		
		Если НЕ suggestion.data.state.status = "действующий" Тогда
			СтатусКомпании = "(" + suggestion.data.state.status + ")";
		Иначе 
			СтатусКомпании = "";
		КонецЕсли;
		
		Если suggestion.data.type = "LEGAL" Тогда // Юр. лицо
			Представление  = СтатусКомпании + " " + suggestion.data.name.short + " " + ?(ПустаяСтрока(suggestion.data.kpp),"", "КПП " + suggestion.data.kpp) + " "
			+ ?(Не ПустаяСтрока(suggestion.data.address.data.city), suggestion.data.address.data.city, suggestion.data.address.data.settlement_with_type);
		Иначе
			Представление  = СтатусКомпании + " " + suggestion.value;
		КонецЕсли;
		
		СписокВыбора.Добавить(suggestion, Представление);  
	КонецЦикла;
	
	Возврат СписокВыбора; 
	
КонецФункции // СформироватьСписокВыбора()

#КонецОбласти