
Процедура ПроверкаДублейОбработкаПередЗаписью(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка ИЛИ НЕ ИспользоватьПроверкуДублейСправочников() ИЛИ НЕ Источник.ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДБ_НастройкиПроверкиДублей.Настройка КАК Настройка
	|ИЗ
	|	РегистрСведений.ДБ_НастройкиПроверкиДублей КАК ДБ_НастройкиПроверкиДублей
	|ГДЕ
	|	ДБ_НастройкиПроверкиДублей.ОбластьПоискаДублей = &ОбластьПоискаДублей";
	
	Запрос.УстановитьПараметр("ОбластьПоискаДублей", Источник.Метаданные().ПолноеИмя());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НастройкиПоискаДублей = Выборка.Настройка.Получить();  
		
		Если НастройкиПоискаДублей.ПравилаПоиска.Количество() Тогда
			
			Запрос = Новый Запрос;
			
			НастройкиПоискаДублей.ПравилаПоиска.ВыгрузитьКолонку("Реквизит");
			
			ТекстЗапроса = "ВЫБРАТЬ " + Источник.Метаданные().Имя + ".Ссылка" + " ИЗ " + Источник.Метаданные().ПолноеИмя() + " КАК " + Источник.Метаданные().Имя + " ГДЕ ";
			
			Реквизиты = Новый Массив;
			
			Для Каждого Строка Из НастройкиПоискаДублей.ПравилаПоиска Цикл
				Если НЕ ПустаяСтрока(Строка.Правило) Тогда
					Реквизиты.Добавить(Источник.Метаданные().Имя + "." + Строка.Реквизит + " = &" + Строка.Реквизит)
				КонецЕсли;
			КонецЦикла;
			
			Запрос.Текст = ТекстЗапроса + СтрСоединить(Реквизиты, " И ");
			
			Для Каждого Отбор Из НастройкиПоискаДублей.ПравилаПоиска Цикл
				Если НЕ ПустаяСтрока(Отбор.Правило) Тогда  
					ЗначениеОтбора = ?(Отбор.Правило = "Подобно", "%" + Источник[Отбор.Реквизит] + "%", Источник[Отбор.Реквизит]);
					Запрос.УстановитьПараметр(Отбор.Реквизит, ЗначениеОтбора)
				КонецЕсли;
			КонецЦикла;
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Если РезультатЗапроса.Пустой() Тогда
				Возврат;
			Иначе    
				Отказ = ?(НастройкиПоискаДублей.ДействиеПослеПроверкиДублей = Перечисления.ДБ_ДействиеПослеПроверкиДублей.ОтказОтЗаписи, Истина, Ложь);
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = СтрШаблон(НСтр("ru='Потенциальный дубль, настройки проверки дублей смотри в Администрирование - Настройка расширения ДБ'"));
				Сообщение.Сообщить(); 
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ЕстьПохожееПоступление(ДокументПоступления) Экспорт
	
	Если НЕ Константы.ДБ_ПроверятьВходящийНомерПоступлениеТоваровУслуг.Получить() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслуг.ДатаВходящегоДокумента, ГОД) = &ДатаВходящегоДокумента
		|	И СОКРЛП(ПоступлениеТоваровУслуг.НомерВходящегоДокумента) = &НомерВходящегоДокумента
		|	И ПоступлениеТоваровУслуг.Контрагент = &Контрагент
		|	И НЕ ПоступлениеТоваровУслуг.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("ДатаВходящегоДокумента",	 НачалоГода(ДокументПоступления.ДатаВходящегоДокумента));
	Запрос.УстановитьПараметр("НомерВходящегоДокумента", СокрЛП(ДокументПоступления.НомерВходящегоДокумента));
	Запрос.УстановитьПараметр("Контрагент",				 ДокументПоступления.Контрагент);
	Запрос.УстановитьПараметр("Ссылка",	 				 ДокументПоступления.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции // ЕстьПохожееПоступление()

Функция ИспользоватьПроверкуДублейСправочников()
	
	Возврат Константы.ДБ_ИспользоватьПроверкуДублейСправочников.Получить();
	
КонецФункции // ИспользоватьПроверкуДублейСправочников()